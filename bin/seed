#!/usr/bin/env node

const axios = require('../node_modules/axios/index.js');
const baseUrl = 'http://localhost:3000';

let token;

const postReq = async (url, data) => {
  return await axios.post(`${baseUrl}/${url}`, data, {
    headers: { Authorization: `bearer ${token}` },
  });
};

const register = async (username, pw = 'hi') => {
  await postReq('api/users', { name: username, pw1: pw, pw2: pw });
};

const login = async (username, password = 'hi') => {
  const resp = await postReq('login', { username, password });
  token = resp.data.access_token;
  console.log('token:', token);
  return resp.data;
};

const addRoom = async (name, description) => {
  await postReq('api/rooms', { name, description, openToJoin: true });
};

const joinRoom = async (addMember) => {
  return await axios.patch(
    `${baseUrl}/api/rooms/2`,
    { addMember },
    {
      headers: { Authorization: `bearer ${token}` },
    },
  );
};

const addQuestion = async (questionCreate) => {
  await postReq('api/rooms/1/questions', questionCreate);
};

const addAnswer = async (answerCreate) => {
  await postReq('api/rooms/1/questions/1/answers', answerCreate);
};

(async () => {
  let userWithToken;

  // ['Joey', 'Lisa', 'Jens', 'Simon', 'Alfred', 'Anna', 'Judith'].forEach((name) => (await register(name)))
  await register('Joey');
  await register('Lisa');
  await login('Joey');
  await addRoom('Classroom Joey', 'random description');

  userWithToken = await login('Lisa');
  await addRoom('Classroom Lisa', 'random description');
  userWithToken = await login('Joey');
  await joinRoom(userWithToken.user);

  await addQuestion({
    text: 'Alright?',
    answersFormat: 'fix',
    fixAnswers: ['yes', 'no'],
  });
  await addAnswer({ fixAnswer: 'yes' });
})();
